// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String
  tokens    Token[]
  avatar    String?
  gender    String?
  title     String?
  bio       String?
  role      String   @default("user")
  coursesTeaching Course[]    @relation("InstructorCourses")
  coursesTaking   Course[]    @relation("CourseStudents")
  submissions     Submission[]
}

model Token {
  id        String   @id @default(uuid())
  userID    String
  user      User     @relation(fields: [userID], references: [id])
  token     String   @unique
  expiresAt DateTime
}

model EmailVerification {
  id           String   @id @default(uuid())
  email        String
  verification String
  createdAt    DateTime @default(now())
  expiresAt    DateTime @updatedAt
}

model Course {
  id           String      @id @default(uuid())
  code         String      @unique
  title        String
  description  String
  instructorId String
  instructor   User        @relation(name: "InstructorCourses", fields: [instructorId], references: [id])
  assessments  Assessment[]
  students     User[]      @relation("CourseStudents")
}

model Assessment {
  id           String     @id @default(uuid())
  title        String
  courseCode   String
  dueDate      DateTime
  course       Course     @relation(fields: [courseCode], references: [code])
  type         String     // "assignment", "exam", etc.
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Assignment   Assignment[]
}

model Assignment {
  id           String     @id
  instructions String
  assessmentId String
  assessment   Assessment @relation(fields: [assessmentId], references: [id])
  submissions  Submission[]
}

model Submission {
  id           String   @id @default(uuid())
  assignmentId String
  studentId    String
  fileUrl      String
  grade        Int?
  feedback     String?
  submittedAt  DateTime @default(now())
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  student      User       @relation(fields: [studentId], references: [id])
}
