types:
  User:
    email: string
    firstName: string
    lastName: string
    avatar?: string
    gender?: string
    title?: string
    bio?: string

  Token: string

  Error:
    message: string

  Featured:
    background: string
    title: string
    description: string

  Assessment:
    id: string
    title: string
    description?: string
    courseId: string
    startDate?: string
    dueDate?: string
    type: string
    questions: Question[]
    submissions: Submission[]

  Question:
    id: string
    assessmentId: string
    title: string
    type: string
    options?: json
    points: int

  Submission:
    id: string
    assessmentId: string
    studentId: string
    submittedAt?: string
    fileUrl?: string
    answers?: json
    grade?: int

  Course:
    id: string
    name: string
    code?: string # NOTE: This is not unique. Do not key to this.
    description?: string
    imageURL?: string
    createdBy: User
    createdAt: int

  UserStats:
    coursesInProgress: int
    coursesCompleted: int
    tasksFinished: int

  UserSevenDayActivity:
    activities: int[]

  CourseMembership:
    courseId: string
    role: string

  Forum:
    id: string
    courseID: string
    name: string
    createdAt: int
    createdBy?: User

  Thread:
    id: string
    forumID: string

    createdAt: int
    updatedAt: int
    createdBy?: User
    deletedAt?: int

    title: string

    posts: Post[]

  Post:
    id: string
    threadID: string

    createdAt: int
    updatedAt: int
    createdBy?: User
    deletedAt?: int

    content: json

endpoints:
  ping:
    request:
      seq: int
    response:
      seq: int
    service: typescript

  checkEmail:
    request:
      email: string
    response:
      taken: boolean
    service: typescript

  register:
    request:
      email: string
      password: string
      firstName: string
      lastName: string
      otp: string
    response:
    service: typescript

  verifyEmail:
    request:
      email: string
    response:
    service: typescript

  login:
    request:
      email: string
      password: string
    response:
      user: User
      token: Token
    service: typescript

  getFeatured:
    request:
    response:
      featured: Featured
    service: typescript

  getUserInfo:
    request:
      email?: string
    response:
      user: User
    service: typescript

  setUserProfile:
    request:
      user: User
    response:
    service: typescript

  createAssessment:
    request:
      title: string
      description?: string
      courseId: string
      startDate?: string
      dueDate?: string
      type: string
      questions?: Question[]
    response:
      assessment: Assessment
    service: typescript

  submitAnswers:
    request:
      assessmentId: string
      studentId: string
      answers: string
    response:
      submission: Submission
    service: typescript

  submitAssignment:
    request:
      assessmentId: string
      studentId: string
      fileUrl: string
    response:
      submission: Submission
    service: typescript

  fetchAssessmentDetails:
    request:
      assessmentId: string
    response:
      assessment: Assessment
    service: typescript

  fetchUserStats:
    request:
    response:
      stats: UserStats
    service: typescript

  fetchUserSevenDayActivity:
    request:
    response:
      activity: UserSevenDayActivity
    service: typescript

  createCourse:
    request:
      name: string
      description: string
      code?: string
      imageURL?: string
    response:
      course: Course
    service: typescript

  getCourses:
    request:
      courseIds: string[]
    response:
      courses: Course[]
    service: typescript

  getUserCourses:
    request:
    response:
      courses: Course[]
      memberships: CourseMembership[]
    service: typescript

  createCourseInvitation:
    request:
      courseId: string
      role: string
    response:
      code: string
    service: typescript

  joinCourse:
    request:
      code: string
    response:
      course: Course
    service: typescript

  leaveCourse:
    request:
      courseId: string
    response:
    service: typescript

  getForumByCourseID:
    request:
      courseID: string
    response:
      forum: Forum
    service: typescript

  getForumByID:
    request:
      id: string
    response:
      forum: Forum
    service: typescript

  getThreads:
    request:
      forumID: string
    response:
      threads: Thread[]
    service: typescript

  upsertThread:
    request:
      thread: Thread
    response:
      thread: Thread
    service: typescript

  deleteThread:
    request:
      threadID: string
    response:
    service: typescript

  upsertPost:
    request:
      post: Post
    response:
      post: Post
    service: typescript

  deletePost:
    request:
      postID: string
    response:
    service: typescript

  getRoleInCourse:
    request:
      courseId: string
    response:
      role: string | null
    service: typescript
